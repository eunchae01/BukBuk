{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\BukBuk\\\\frontend\\\\src\\\\components\\\\service\\\\ServiceWrite.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Nav from \"../navibar/Nav\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport '../../css files/service-write.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ServiceWrite() {\n  _s();\n\n  // 제목과 내용을 담는 상태 변경 useState\n  const [content, setContent] = useState({\n    title: \"\",\n    content: \"\"\n  }); // 서버 받는 코드\n\n  const submitReview = () => {\n    axios.post('http://localhost:8000/api/insert', {\n      title: content.title,\n      content: content.content\n    }).then(() => {\n      alert('등록 완료!');\n    }).catch(console.log(\"서버에 도달하지 못했습니다.\"));\n  }; // 입력받은 값을 이름에 맞게 할당 해주는 getValue\n\n\n  const getValue = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setContent({ ...content,\n      [name]: value\n    });\n    console.log(content);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"service-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"writedown\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"title-input\",\n          type: \"text\",\n          placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n          onChange: getValue,\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n          editor: ClassicEditor,\n          data: \"<p>Hello from CKEditor 5!</p>\",\n          onReady: editor => {\n            // You can store the \"editor\" and use when it is needed.\n            console.log('Editor is ready to use!', editor);\n          } // content 도 getValue를 적용할 수 있지만 , 에디터 설정을 바꿔본다.\n          ,\n          onChange: (event, editor) => {\n            const data = editor.getData();\n            console.log({\n              event,\n              editor,\n              data\n            });\n            setContent({ ...content,\n              // 상태변경엔 spread 연산자를 통한 덮어쓰기 해줘야한다 \n              content: data\n            });\n            console.log(content);\n          },\n          onBlur: (event, editor) => {\n            console.log('Blur.', editor);\n          },\n          onFocus: (event, editor) => {\n            console.log('Focus.', editor);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: submitReview,\n          children: \"\\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: '/Service',\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"go-back\",\n            children: \"\\uB3CC\\uC544\\uAC00\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ServiceWrite, \"byUjduiOH1exN+l5N3yxY1SujkA=\");\n\n_c = ServiceWrite;\n;\nexport default ServiceWrite;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceWrite\");","map":{"version":3,"names":["React","useState","axios","Link","Nav","CKEditor","ClassicEditor","ServiceWrite","content","setContent","title","submitReview","post","then","alert","catch","console","log","getValue","e","name","value","target","editor","event","data","getData"],"sources":["C:/Users/roger/BukBuk/frontend/src/components/service/ServiceWrite.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Nav from \"../navibar/Nav\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport '../../css files/service-write.css';\r\n\r\nfunction ServiceWrite(){\r\n   \r\n    \r\n\r\n    // 제목과 내용을 담는 상태 변경 useState\r\n    const [content , setContent] = useState({\r\n        title : \"\",\r\n        content: \"\"\r\n    })\r\n\r\n  \r\n\r\n\r\n    // 서버 받는 코드\r\n      const submitReview = ()=>{\r\n        axios.post('http://localhost:8000/api/insert', {\r\n          title: content.title,\r\n          content: content.content\r\n        }).then(()=>{\r\n          alert('등록 완료!');\r\n        }).catch(\r\n            console.log(\"서버에 도달하지 못했습니다.\"))\r\n      };\r\n\r\n\r\n\r\n\r\n    // 입력받은 값을 이름에 맞게 할당 해주는 getValue\r\n    const getValue = e =>{\r\n        const {name, value} = e.target;\r\n        setContent({\r\n            ...content,\r\n            [name]: value\r\n    })\r\n    console.log(content)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Nav/>\r\n            <main className=\"service-main\">\r\n                <div id=\"writedown\">\r\n                    <input \r\n                    className=\"title-input\" \r\n                    type=\"text\" \r\n                    placeholder=\"제목을 입력해주세요\"\r\n                    onChange={getValue}\r\n                    name=\"title\"/>\r\n                    <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data=\"<p>Hello from CKEditor 5!</p>\"\r\n                        onReady={editor => {\r\n                            // You can store the \"editor\" and use when it is needed.\r\n                            console.log('Editor is ready to use!', editor);\r\n                        }}\r\n\r\n                        // content 도 getValue를 적용할 수 있지만 , 에디터 설정을 바꿔본다.\r\n                        onChange={(event, editor) => {\r\n                            const data = editor.getData();\r\n                            console.log({ event, editor, data });\r\n                            setContent({\r\n                                ...content, // 상태변경엔 spread 연산자를 통한 덮어쓰기 해줘야한다 \r\n                                content: data\r\n                            })\r\n                            console.log(content)\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                            console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                            console.log('Focus.', editor);\r\n                        }}\r\n                    />\r\n                    <button \r\n                    className=\"submit\"\r\n                    onClick={submitReview}\r\n                    >입력</button>\r\n                    <Link to={'/Service'}><button className=\"go-back\">돌아가기</button></Link>\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ServiceWrite;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}