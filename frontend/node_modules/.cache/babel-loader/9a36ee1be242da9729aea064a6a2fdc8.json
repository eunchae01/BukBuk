{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eunchae\\\\Desktop\\\\first-pro\\\\frontend\\\\src\\\\Service.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport './service.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Service() {\n  _s();\n\n  // 입력 받은 값을 전체 고객센터 창에 띄우는 상태변경 useState\n  const [viewContent, setViewContent] = useState([]); //     useEffect(()=>{\n  //                axios.post('http://localhost:8080/service')\n  //                .then(res=>{\n  //                res.parse()\n  //                }).then(data=>console.log(data))\n  //                .catch(console.log('error2'))\n  //              },[]);\n\n  const service = async () => {\n    const data = await Axios.get('http://localhost:8080/service').then(response => {\n      setViewContent(response);\n      console.log(viewContent.data.service[0].service_title);\n    });\n  }; // 입력받은 값을 이름에 맞게 할당 해주는 getValue\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"service-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Service, \"Sj06JgZepyR+C/bLumSCmAXIemE=\");\n\n_c = Service;\nexport default Service;\n\nvar _c;\n\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"names":["React","useState","useEffect","Axios","Service","viewContent","setViewContent","service","data","get","then","response","console","log","service_title"],"sources":["C:/Users/Eunchae/Desktop/first-pro/frontend/src/Service.js"],"sourcesContent":["import React , {useState ,useEffect} from \"react\";\r\nimport Axios from 'axios';\r\nimport './service.css';\r\n\r\n\r\n\r\nfunction Service(){\r\n\r\n\r\n\r\n\r\n    // 입력 받은 값을 전체 고객센터 창에 띄우는 상태변경 useState\r\n    const [viewContent , setViewContent] = useState ([])\r\n\r\n\r\n\r\n\r\n//     useEffect(()=>{\r\n//                axios.post('http://localhost:8080/service')\r\n//                .then(res=>{\r\n//                res.parse()\r\n//                }).then(data=>console.log(data))\r\n//                .catch(console.log('error2'))\r\n//              },[]);\r\n\r\n     const service = async()=>{\r\n        const data = await Axios.get('http://localhost:8080/service')\r\n        .then((response)=>{\r\n            setViewContent(response);\r\n            console.log(viewContent.data.service[0].service_title)\r\n        })}\r\n\r\n\r\n\r\n\r\n    // 입력받은 값을 이름에 맞게 할당 해주는 getValue\r\n\r\n    return(\r\n        <main className=\"service-main\">\r\n            <div>\r\n                hello\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </main>\r\n\r\n\r\n\r\n);\r\n}\r\n\r\nexport default Service;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;;AAIA,SAASC,OAAT,GAAkB;EAAA;;EAKd;EACA,MAAM,CAACC,WAAD,EAAeC,cAAf,IAAiCL,QAAQ,CAAE,EAAF,CAA/C,CANc,CAWlB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEK,MAAMM,OAAO,GAAG,YAAS;IACtB,MAAMC,IAAI,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,+BAAV,EAClBC,IADkB,CACZC,QAAD,IAAY;MACdL,cAAc,CAACK,QAAD,CAAd;MACAC,OAAO,CAACC,GAAR,CAAYR,WAAW,CAACG,IAAZ,CAAiBD,OAAjB,CAAyB,CAAzB,EAA4BO,aAAxC;IACH,CAJkB,CAAnB;EAIG,CALN,CAnBa,CA6Bd;;;EAEA,oBACI;IAAM,SAAS,EAAC,cAAhB;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH;;GA7CQV,O;;KAAAA,O;AA+CT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}